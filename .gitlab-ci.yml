include:
  - project: syseleven/gitlab-ci-templates
    file: DockerBuild-kaniko.yml
    ref: 3.7.1
  - project: syseleven/gitlab-ci-templates
    file: DockerLint.yml
    ref: 3.7.1
  - project: syseleven/gitlab-ci-templates
    file: YamlLint.yml
    ref: 3.7.1
  - project: syseleven/gitlab-ci-templates
    file: MarkdownLint.yml
    ref: 3.7.1
  - project: syseleven/gitlab-ci-templates
    file: ContainerImageCVEScan.yml
    ref: 3.7.1

stages:
  - test
  - build
  - validate
  - cleanup

variables:
  # We need this older alpine version, because s3cmd is broken with python3.9
  # Need to wait until there is a newer thatn 2.1.0-r1 version for s3cmd
  # https://github.com/s3tools/s3cmd/issues/1182
  # renovate: datasource=docker depName=alpine
  ALPINE_VERSION: 3.13.5
  # renovate: datasource=github-releases depName=helm/helm
  HELM_VERSION: v3.6.3
  # renovate: datasource=github-releases depName=kubernetes/kubernetes
  KUBECTL_VERSION: v1.21.4
  # renovate: datasource=github-releases depName=roboll/helmfile
  HELMFILE_VERSION: v0.140.0
  KUSTOMIZE_VERSION: v3.8.1
  S3CMD_VERSION: 2.1.0-r1
  # renovate: datasource=github-releases depName=databus23/helm-diff
  HELMDIFF_VERSION: v3.1.3

.kaniko-build-base:
  tags:
    - onetime
  variables:
    DOCKER_BUILD_ARGS: >
      --build-arg ALPINE_VERSION=${ALPINE_VERSION}
      --build-arg HELM_VERSION=${HELM_VERSION}
      --build-arg KUBECTL_VERSION=${KUBECTL_VERSION}
      --build-arg HELMFILE_VERSION=${HELMFILE_VERSION}
      --build-arg KUSTOMIZE_VERSION=${KUSTOMIZE_VERSION}
      --build-arg S3CMD_VERSION=${S3CMD_VERSION}
      --build-arg HELMDIFF_VERSION=${HELMDIFF_VERSION}

.dockerhub_variables: &dockerhub_variables
  variables:
    CI_REGISTRY: 'https://index.docker.io/v1/'
    CI_REGISTRY_USER: $DOCKERHUBUSER
    CI_REGISTRY_PASSWORD: $DOCKERHUBTOKEN
    IMAGE_NAME: syseleven/kubectl-helm

kaniko-build-default-dockerhub:
  extends: kaniko-build-default
  <<: *dockerhub_variables

kaniko-build-tags-dockerhub:
  extends: kaniko-build-tags
  <<: *dockerhub_variables

kaniko-rm-dev-image:
  stage: cleanup

# validation of the built image

# ensure all cve scans run in the validation stage
.cve-scan-base:
  stage: validate

# ensure the installed binaries actually work
.validate-binaries-base:
  variables:
    VALIDATION_IMAGE: "${CI_REGISTRY_IMAGE}:latest"
  image:
    name: "${VALIDATION_IMAGE}"
    entrypoint: [""]
  stage: validate
  script:
    - grep "VERSION_ID=${ALPINE_VERSION}" /etc/os-release
    - helm version | grep "${HELM_VERSION}"
    - helm repo list
    - helm diff --help
    - helm plugin list | grep "diff.*${HELMDIFF_VERSION/v/}"
    - kubectl version --client | grep "${KUBECTL_VERSION}"
    - helmfile --version | grep "${HELMFILE_VERSION}"
    - kustomize version | grep "${KUSTOMIZE_VERSION}"
    - s3cmd --version | grep "${S3CMD_VERSION/-r*/}"
    - git version
    - make --version
    - curl --version

validate-binaries-default:
  extends: .validate-binaries-base
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

validate-binaries-mr:
  extends: .validate-binaries-base
  variables:
    VALIDATION_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

validate-binaries-tag:
  extends: .validate-binaries-base
  variables:
    VALIDATION_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG
